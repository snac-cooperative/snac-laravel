name: Deploy Workflow

on:
  push:
    branches:
      - development
      - master

jobs:
  app-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: mbstring, bcmath, csv
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Install Composer Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
      - name: Generate Key
        run: php artisan key:generate
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DB_PORT: 5432
        run: vendor/bin/phpunit
  build-js-production:
    name: Build JavaScript/CSS for PRODUCTION Server
    runs-on: ubuntu-latest
    needs: app-tests
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4
      - name: NPM Build
        run: |
          npm install
          npm run prod
      - name: Put built assets in Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: assets
          path: public
  build-js-staging:
    name: Build JavaScript/CSS for STAGING Server
    runs-on: ubuntu-latest
    needs: app-tests
    if: github.ref == 'refs/heads/jnm/laravel-deploy'
    steps:
      - uses: actions/checkout@v4
      - name: NPM Build
        run: |
          npm install
          npm run dev
      - name: Put built assets in Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: assets
          path: public
  deploy-production:
    name: Deploy Project to PRODUCTION Server
    runs-on: ubuntu-latest
    needs: [build-js-production, app-tests]
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4
      - name: Fetch built assets from Artifacts
        uses: actions/download-artifact@v4
        with:
          name: assets
          path: public
      - name: Composer install
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
      - name: Deploy to Prod
        uses: deployphp/action@v1
        with:
          dep: deploy stage=production
          private-key: ${{ secrets.SSH_PRIVATE_KEY_PROD }}
          skip-ssh-setup: true
          verbosity: -vvv
  deploy-development:
    name: Deploy Project to DEVELOPMENT Server
    runs-on: self-hosted
    needs: [build-js-staging, app-tests]
    if: github.ref == 'refs/heads/development'
    steps:
      - uses: actions/checkout@v4
      - name: Fetch built assets from Artifacts
        uses: actions/download-artifact@v4
        with:
          name: assets
          path: public
      - name: Composer install
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
      - name: Deploy to Dev
        uses: deployphp/action@v1
        with:
          dep: deploy stage=development
          private-key: ${{ secrets.SSH_PRIVATE_KEY_DEV }}
          skip-ssh-setup: true
          verbosity: -vvv
